[ ](https://ziglang.org/documentation/master/std/)
  * [std](https://ziglang.org/documentation/master/std/#std)
  * [array_hash_map](https://ziglang.org/documentation/master/std/#std.array_hash_map)
  * [AutoArrayHashMap](https://ziglang.org/documentation/master/std/#std.array_hash_map.AutoArrayHashMap)


Loading...
# Type Function[[src]](https://ziglang.org/documentation/master/std/#src/std/array_hash_map.zig)
An `ArrayHashMap[](https://ziglang.org/documentation/master/std/#std.array_hash_map.ArrayHashMapWithAllocator)` with default hash and equal functions.
See `AutoContext[](https://ziglang.org/documentation/master/std/#std.array_hash_map.AutoContext)` for a description of the hash and equal implementations.
## Parameters
```
K: type
```

```
V: type
```

## Errors
anyerror means the error set is known only at runtime.
## Search Results
## No Results Found
Press escape to exit search and then '?' to see more options.
## Fields
## Types
## Namespaces
## Global Variables
## Values
## Functions
## Error Sets
## Example Usage
## Source Code
```
pub fn AutoArrayHashMap(comptime K: type, comptime V: type) type {
  return ArrayHashMap[](https://ziglang.org/documentation/master/std/#std.array_hash_map.ArrayHashMapWithAllocator)(K, V, AutoContext[](https://ziglang.org/documentation/master/std/#std.array_hash_map.AutoContext)(K), !autoEqlIsCheap[](https://ziglang.org/documentation/master/std/#std.array_hash_map.autoEqlIsCheap)(K));
}
```

# Keyboard Shortcuts 

`?`
    Show this help dialog 

`Esc`
    Clear focus; close this dialog 

`s`
    Focus the search field 

`u`
    Go to source code 

`↑`
    Move up in search results 

`↓`
    Move down in search results 

`⏎`
    Go to active search result
# Errors
