[ ](https://ziglang.org/documentation/master/std/)
  * [std](https://ziglang.org/documentation/master/std/#std)
  * [enums](https://ziglang.org/documentation/master/std/#std.enums)
  * [EnumArray](https://ziglang.org/documentation/master/std/#std.enums.EnumArray)


Loading...
# Type Function[[src]](https://ziglang.org/documentation/master/std/#src/std/enums.zig)
An array keyed by an enum, backed by a dense array. If the enum is not dense, a mapping will be constructed from enum values to dense indices. This type does no dynamic allocation and can be copied by value.
## Parameters
```
E: type
```

```
V: type
```

## Errors
anyerror means the error set is known only at runtime.
## Search Results
## No Results Found
Press escape to exit search and then '?' to see more options.
## Fields
```
values: [Indexer[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Indexer).count[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Indexer.count)]Value[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Value)
```

## Types
  * [Entry](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Entry)
  * [Indexer](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Indexer)
  * [Iterator](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Iterator)


## Namespaces
## Global Variables
## Values
[Key](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Key)| | The key type used to index this map  
---|---|---  
[Value](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Value)| | The value type stored in this map  
[len](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.len)| | The number of possible keys in the map  
## Functions `pub fn get[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.get)(self: Self[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray), key: Key[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Key)) Value[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Value)`
    
Returns the value in the array associated with a key. `pub fn getPtr[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.getPtr)(self: *Self[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray), key: Key[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Key)) *Value[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Value)`
    
Returns a pointer to the slot in the array associated with a key. `pub fn getPtrConst[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.getPtrConst)(self: *const Self[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray), key: Key[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Key)) *const Value[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Value)`
    
Returns a const pointer to the slot in the array associated with a key. `pub fn init[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.init)(init_values: EnumFieldStruct[](https://ziglang.org/documentation/master/std/#std.enums.EnumFieldStruct)(E, Value[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Value), null)) Self[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray)`
`pub fn initDefault[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.initDefault)(comptime default: ?Value[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Value), init_values: EnumFieldStruct[](https://ziglang.org/documentation/master/std/#std.enums.EnumFieldStruct)(E, Value[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Value), default)) Self[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray)`
    
Initializes values in the enum array, with the specified default. `pub fn initFill[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.initFill)(v: Value[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Value)) Self[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray)`
`pub fn initUndefined[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.initUndefined)() Self[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray)`
`pub fn iterator[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.iterator)(self: *Self[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray)) Iterator[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Iterator)`
    
Iterates over the items in the array, in index order. `pub fn set[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.set)(self: *Self[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray), key: Key[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Key), value: Value[](https://ziglang.org/documentation/master/std/#std.enums.EnumArray.Value)) void`
    
Sets the value in the slot associated with a key.
## Error Sets
## Example Usage
## Source Code
# Keyboard Shortcuts 

`?`
    Show this help dialog 

`Esc`
    Clear focus; close this dialog 

`s`
    Focus the search field 

`u`
    Go to source code 

`↑`
    Move up in search results 

`↓`
    Move down in search results 

`⏎`
    Go to active search result
# Errors
