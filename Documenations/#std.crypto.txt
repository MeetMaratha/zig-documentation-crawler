[ ](https://ziglang.org/documentation/master/std/)
  * [std](https://ziglang.org/documentation/master/std/#std)
  * [crypto](https://ziglang.org/documentation/master/std/#std.crypto)


Loading...
# struct[[src]](https://ziglang.org/documentation/master/std/#src/std/crypto.zig)
Cryptography.
## Parameters
## Errors
anyerror means the error set is known only at runtime.
## Search Results
## No Results Found
Press escape to exit search and then '?' to see more options.
## Fields
## Types
  * [Certificate](https://ziglang.org/documentation/master/std/#std.crypto.Certificate)
  * [SideChannelsMitigations](https://ziglang.org/documentation/master/std/#std.crypto.SideChannelsMitigations)


## Namespaces
  * [aead](https://ziglang.org/documentation/master/std/#std.crypto.aead)
  * [auth](https://ziglang.org/documentation/master/std/#std.crypto.auth)
  * [codecs](https://ziglang.org/documentation/master/std/#std.crypto.codecs)
  * [core](https://ziglang.org/documentation/master/std/#std.crypto.core)
  * [dh](https://ziglang.org/documentation/master/std/#std.crypto.dh)
  * [ecc](https://ziglang.org/documentation/master/std/#std.crypto.ecc)
  * [errors](https://ziglang.org/documentation/master/std/#std.crypto.errors)
  * [ff](https://ziglang.org/documentation/master/std/#std.crypto.ff)
  * [hash](https://ziglang.org/documentation/master/std/#std.crypto.hash)
  * [kdf](https://ziglang.org/documentation/master/std/#std.crypto.kdf)
  * [kem](https://ziglang.org/documentation/master/std/#std.crypto.kem)
  * [nacl](https://ziglang.org/documentation/master/std/#std.crypto.nacl)
  * [onetimeauth](https://ziglang.org/documentation/master/std/#std.crypto.onetimeauth)
  * [pwhash](https://ziglang.org/documentation/master/std/#std.crypto.pwhash)
  * [sign](https://ziglang.org/documentation/master/std/#std.crypto.sign)
  * [stream](https://ziglang.org/documentation/master/std/#std.crypto.stream)
  * [timing_safe](https://ziglang.org/documentation/master/std/#std.crypto.timing_safe)
  * [tls](https://ziglang.org/documentation/master/std/#std.crypto.tls)
  * [utils](https://ziglang.org/documentation/master/std/#std.crypto.utils)


## Global Variables
## Values
[default_side_channels_mitigations](https://ziglang.org/documentation/master/std/#std.crypto.default_side_channels_mitigations)| |   
---|---|---  
[random](https://ziglang.org/documentation/master/std/#std.crypto.tlcsprng.interface)| `std[](https://ziglang.org/documentation/master/std/#std).Random[](https://ziglang.org/documentation/master/std/#std.Random)`| We use this as a layer of indirection because global const pointers cannot point to thread-local variables.  
## Functions `pub inline fn secureZero[](https://ziglang.org/documentation/master/std/#std.crypto.secureZero)(comptime T: type, s: []volatile T) void`
    
Sets a slice to zeroes. Prevents the store from being optimized out.
## Error Sets
## Example Usage
## Source Code
# Keyboard Shortcuts 

`?`
    Show this help dialog 

`Esc`
    Clear focus; close this dialog 

`s`
    Focus the search field 

`u`
    Go to source code 

`↑`
    Move up in search results 

`↓`
    Move down in search results 

`⏎`
    Go to active search result
# Errors
