[ ](https://ziglang.org/documentation/master/std/)
  * [std](https://ziglang.org/documentation/master/std/#std)
  * [tz](https://ziglang.org/documentation/master/std/#std.tz)
  * [Tz](https://ziglang.org/documentation/master/std/#std.tz.Tz)


Loading...
# struct[[src]](https://ziglang.org/documentation/master/std/#src/std/tz.zig)
## Parameters
## Errors
anyerror means the error set is known only at runtime.
## Search Results
## No Results Found
Press escape to exit search and then '?' to see more options.
## Fields
```
allocator: std[](https://ziglang.org/documentation/master/std/#std).mem[](https://ziglang.org/documentation/master/std/#std.mem).Allocator[](https://ziglang.org/documentation/master/std/#std.mem.Allocator)
```

```
transitions: []const Transition[](https://ziglang.org/documentation/master/std/#std.tz.Transition)
```

```
timetypes: []const Timetype[](https://ziglang.org/documentation/master/std/#std.tz.Timetype)
```

```
leapseconds: []const Leapsecond[](https://ziglang.org/documentation/master/std/#std.tz.Leapsecond)
```

```
footer: ?[]const u8
```

## Types
## Namespaces
## Global Variables
## Values
## Functions `pub fn deinit[](https://ziglang.org/documentation/master/std/#std.tz.Tz.deinit)(self: *Tz[](https://ziglang.org/documentation/master/std/#std.tz.Tz)) void`
`pub fn parse[](https://ziglang.org/documentation/master/std/#std.tz.Tz.parse)(allocator: std[](https://ziglang.org/documentation/master/std/#std).mem[](https://ziglang.org/documentation/master/std/#std.mem).Allocator[](https://ziglang.org/documentation/master/std/#std.mem.Allocator), reader: anytype) !Tz[](https://ziglang.org/documentation/master/std/#std.tz.Tz)`

## Error Sets
## Example Usage
## Source Code
# Keyboard Shortcuts 

`?`
    Show this help dialog 

`Esc`
    Clear focus; close this dialog 

`s`
    Focus the search field 

`u`
    Go to source code 

`↑`
    Move up in search results 

`↓`
    Move down in search results 

`⏎`
    Go to active search result
# Errors
