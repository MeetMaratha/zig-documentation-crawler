[ ](https://ziglang.org/documentation/master/std/)
  * [std](https://ziglang.org/documentation/master/std/#std)
  * [io](https://ziglang.org/documentation/master/std/#std.io)


Loading...
# struct[[src]](https://ziglang.org/documentation/master/std/#src/std/io.zig)
## Parameters
## Errors
anyerror means the error set is known only at runtime.
## Search Results
## No Results Found
Press escape to exit search and then '?' to see more options.
## Fields
## Types
  * [AnyReader](https://ziglang.org/documentation/master/std/#std.io.Reader)
  * [AnyWriter](https://ziglang.org/documentation/master/std/#std.io.Writer)
  * [BitReader](https://ziglang.org/documentation/master/std/#std.io.bit_reader.BitReader)
  * [BitWriter](https://ziglang.org/documentation/master/std/#std.io.bit_writer.BitWriter)
  * [BufferedAtomicFile](https://ziglang.org/documentation/master/std/#std.io.buffered_atomic_file.BufferedAtomicFile)
  * [BufferedReader](https://ziglang.org/documentation/master/std/#std.io.buffered_reader.BufferedReader)
  * [BufferedWriter](https://ziglang.org/documentation/master/std/#std.io.buffered_writer.BufferedWriter)
  * [CWriter](https://ziglang.org/documentation/master/std/#std.io.c_writer.CWriter)
  * [ChangeDetectionStream](https://ziglang.org/documentation/master/std/#std.io.change_detection_stream.ChangeDetectionStream)
  * [CountingReader](https://ziglang.org/documentation/master/std/#std.io.counting_reader.CountingReader)
  * [CountingWriter](https://ziglang.org/documentation/master/std/#std.io.counting_writer.CountingWriter)
  * [FindByteWriter](https://ziglang.org/documentation/master/std/#std.io.find_byte_writer.FindByteWriter)
  * [FixedBufferStream](https://ziglang.org/documentation/master/std/#std.io.fixed_buffer_stream.FixedBufferStream)
  * [GenericReader](https://ziglang.org/documentation/master/std/#std.io.GenericReader)
  * [GenericWriter](https://ziglang.org/documentation/master/std/#std.io.GenericWriter)
  * [LimitedReader](https://ziglang.org/documentation/master/std/#std.io.limited_reader.LimitedReader)
  * [MultiWriter](https://ziglang.org/documentation/master/std/#std.io.multi_writer.MultiWriter)
  * [NullWriter](https://ziglang.org/documentation/master/std/#std.io.NullWriter)
  * [PollFifo](https://ziglang.org/documentation/master/std/#std.io.PollFifo)
  * [PollFiles](https://ziglang.org/documentation/master/std/#std.io.PollFiles)
  * [Poller](https://ziglang.org/documentation/master/std/#std.io.Poller)
  * [Reader](https://ziglang.org/documentation/master/std/#std.io.GenericReader)
  * [SeekableStream](https://ziglang.org/documentation/master/std/#std.io.seekable_stream.SeekableStream)
  * [StreamSource](https://ziglang.org/documentation/master/std/#std.io.stream_source.StreamSource)
  * [Writer](https://ziglang.org/documentation/master/std/#std.io.GenericWriter)


## Namespaces
  * [tty](https://ziglang.org/documentation/master/std/#std.io.tty)


## Global Variables
## Values
[null_writer](https://ziglang.org/documentation/master/std/#std.io.null_writer)| `NullWriter[](https://ziglang.org/documentation/master/std/#std.io.NullWriter)`| A Writer that doesn't write to anything.  
---|---|---  
## Functions `pub fn bitReader[](https://ziglang.org/documentation/master/std/#std.io.bit_reader.bitReader)(comptime endian: std[](https://ziglang.org/documentation/master/std/#std).builtin[](https://ziglang.org/documentation/master/std/#std.builtin).Endian[](https://ziglang.org/documentation/master/std/#std.builtin.Endian), reader: anytype) BitReader[](https://ziglang.org/documentation/master/std/#std.io.bit_reader.BitReader)(endian, @TypeOf(reader))`
`pub fn bitWriter[](https://ziglang.org/documentation/master/std/#std.io.bit_writer.bitWriter)(comptime endian: std[](https://ziglang.org/documentation/master/std/#std).builtin[](https://ziglang.org/documentation/master/std/#std.builtin).Endian[](https://ziglang.org/documentation/master/std/#std.builtin.Endian), writer: anytype) BitWriter[](https://ziglang.org/documentation/master/std/#std.io.bit_writer.BitWriter)(endian, @TypeOf(writer))`
`pub fn bufferedReader[](https://ziglang.org/documentation/master/std/#std.io.buffered_reader.bufferedReader)(reader: anytype) BufferedReader[](https://ziglang.org/documentation/master/std/#std.io.buffered_reader.BufferedReader)(4096, @TypeOf(reader))`
`pub fn bufferedReaderSize[](https://ziglang.org/documentation/master/std/#std.io.buffered_reader.bufferedReaderSize)(comptime size: usize, reader: anytype) BufferedReader[](https://ziglang.org/documentation/master/std/#std.io.buffered_reader.BufferedReader)(size, @TypeOf(reader))`
`pub fn bufferedWriter[](https://ziglang.org/documentation/master/std/#std.io.buffered_writer.bufferedWriter)(underlying_stream: anytype) BufferedWriter[](https://ziglang.org/documentation/master/std/#std.io.buffered_writer.BufferedWriter)(4096, @TypeOf(underlying_stream))`
`pub fn cWriter[](https://ziglang.org/documentation/master/std/#std.io.c_writer.cWriter)(c_file: *std[](https://ziglang.org/documentation/master/std/#std).c[](https://ziglang.org/documentation/master/std/#std.c).FILE[](https://ziglang.org/documentation/master/std/#std.c.FILE)) CWriter[](https://ziglang.org/documentation/master/std/#std.io.c_writer.CWriter)`
`pub fn changeDetectionStream[](https://ziglang.org/documentation/master/std/#std.io.change_detection_stream.changeDetectionStream)( source: []const u8, underlying_writer: anytype, ) ChangeDetectionStream[](https://ziglang.org/documentation/master/std/#std.io.change_detection_stream.ChangeDetectionStream)(@TypeOf(underlying_writer))`
`pub fn countingReader[](https://ziglang.org/documentation/master/std/#std.io.counting_reader.countingReader)(reader: anytype) CountingReader[](https://ziglang.org/documentation/master/std/#std.io.counting_reader.CountingReader)(@TypeOf(reader))`
`pub fn countingWriter[](https://ziglang.org/documentation/master/std/#std.io.counting_writer.countingWriter)(child_stream: anytype) CountingWriter[](https://ziglang.org/documentation/master/std/#std.io.counting_writer.CountingWriter)(@TypeOf(child_stream))`
`pub fn findByteWriter[](https://ziglang.org/documentation/master/std/#std.io.find_byte_writer.findByteWriter)(byte: u8, underlying_writer: anytype) FindByteWriter[](https://ziglang.org/documentation/master/std/#std.io.find_byte_writer.FindByteWriter)(@TypeOf(underlying_writer))`
`pub fn fixedBufferStream[](https://ziglang.org/documentation/master/std/#std.io.fixed_buffer_stream.fixedBufferStream)(buffer: anytype) FixedBufferStream[](https://ziglang.org/documentation/master/std/#std.io.fixed_buffer_stream.FixedBufferStream)(Slice[](https://ziglang.org/documentation/master/std/#std.io.fixed_buffer_stream.Slice)(@TypeOf(buffer)))`
`pub fn getStdErr[](https://ziglang.org/documentation/master/std/#std.io.getStdErr)() File[](https://ziglang.org/documentation/master/std/#std.fs.File)`
`pub fn getStdIn[](https://ziglang.org/documentation/master/std/#std.io.getStdIn)() File[](https://ziglang.org/documentation/master/std/#std.fs.File)`
`pub fn getStdOut[](https://ziglang.org/documentation/master/std/#std.io.getStdOut)() File[](https://ziglang.org/documentation/master/std/#std.fs.File)`
`pub fn limitedReader[](https://ziglang.org/documentation/master/std/#std.io.limited_reader.limitedReader)(inner_reader: anytype, bytes_left: u64) LimitedReader[](https://ziglang.org/documentation/master/std/#std.io.limited_reader.LimitedReader)(@TypeOf(inner_reader))`
    
Returns an initialised `LimitedReader[](https://ziglang.org/documentation/master/std/#std.io.limited_reader.LimitedReader)`. `bytes_left` is a `u64` to be able to take 64 bit file offsets `pub fn multiWriter[](https://ziglang.org/documentation/master/std/#std.io.multi_writer.multiWriter)(streams: anytype) MultiWriter[](https://ziglang.org/documentation/master/std/#std.io.multi_writer.MultiWriter)(@TypeOf(streams))`
`pub fn poll[](https://ziglang.org/documentation/master/std/#std.io.poll)( allocator: Allocator[](https://ziglang.org/documentation/master/std/#std.mem.Allocator), comptime StreamEnum: type, files: PollFiles[](https://ziglang.org/documentation/master/std/#std.io.PollFiles)(StreamEnum), ) Poller[](https://ziglang.org/documentation/master/std/#std.io.Poller)(StreamEnum)`

## Error Sets
## Example Usage
## Source Code
# Keyboard Shortcuts 

`?`
    Show this help dialog 

`Esc`
    Clear focus; close this dialog 

`s`
    Focus the search field 

`u`
    Go to source code 

`↑`
    Move up in search results 

`↓`
    Move down in search results 

`⏎`
    Go to active search result
# Errors
